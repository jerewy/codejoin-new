version: '3.8'

services:
  # Frontend (Next.js)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_SOCKET_URL=http://localhost:3002
    depends_on:
      - backend
      - socket-server
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    networks:
      - app-network

  # Code Execution Backend
  backend:
    build:
      context: ./code-execution-backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - API_KEY=${API_KEY}
      - DOCKER_SOCKET=/var/run/docker.sock
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./code-execution-backend:/app
      - /app/node_modules
    networks:
      - app-network
    restart: unless-stopped

  # Socket.IO Server
  socket-server:
    build:
      context: ./socket-server
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - FRONTEND_URL=http://localhost:3000
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
    volumes:
      - ./socket-server:/app
      - /app/node_modules
    networks:
      - app-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
      - socket-server
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  node_modules_frontend:
  node_modules_backend:
  node_modules_socket: